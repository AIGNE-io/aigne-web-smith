type: team
name: generate
alias:
  - gen
  - g
description: Automatically generates comprehensive website pages
skills:
  - url: ../init/index.mjs
    default_input:
      skipIfExists: true
  - ../utils/load-config.mjs
  - ../utils/load-sources.mjs
  - ../plan/analyze-website-structure.mjs
  - url: ../utils/save-output.mjs
    default_input:
      saveKey: structurePlan
      savePath:
        $get: tmpDir
      fileName: structure-plan.json
  - type: transform
    name: transformData
    task_render_mode: hide
    jsonata: |
      $merge([
        $,
        {
          'structurePlanResult': $map(structurePlan, function($item) {
            $merge([
              $item,
              {
                'translates': [$map(translateLanguages, function($lang) { {"language": $lang} })]
              }
            ])
          }),
          "datasources": ""
        }
      ])
  - ../utils/format-website-structure.mjs
  - ../update/batch-generate-page-detail.yaml
  - url: ../utils/check-feedback-refiner.mjs
    default_input:
      stage: structure_planning
  - ./component-library/load-component-library.mjs
  - type: team
    name: analyzeComponentLibrary(openai/gpt-5)
    model: openai/gpt-5
    skills:
      - ./component-library/analyze-component-library.mjs
  - ./page/compose-pages-kit-data.mjs
  - ../utils/save-pages.mjs

input_schema:
  type: object
  properties:
    glossary:
      type: string
      description: Glossary of terms for consistent terminology, use @<file> to read from a file
    feedback:
      type: string
      description: Feedback for structure planning adjustments
    forceRegenerate:
      type: boolean
      description: Force regenerate all pages
  required:
    - config
mode: sequential
