id: a44r0SiGV9AFn2Fj
createdAt: 2025-07-24T13:11:24.693Z
updatedAt: 2025-08-22T08:34:56.650Z
name: Action
description: Action buttons component with alignment and customization support
properties:
  b8x4m3n9kp7qtw5r:
    index: 0
    data:
      id: b8x4m3n9kp7qtw5r
      key: buttons
      type: array
      visible: false
      locales:
        zh:
          name: 按钮列表
          defaultValue:
            - id: btn-default-1
              type: link
              text: Get Started
              url: ""
              variant: contained
              size: medium
              target: _self
              needLogin: false
        en:
          name: Button List
          defaultValue:
            - id: btn-default-1
              type: link
              text: Get Started
              url: ""
              variant: contained
              size: medium
              target: _self
              needLogin: false
      subProperties:
        k9j2h5f8l3m7n4p1:
          index: 0
          data:
            id: k9j2h5f8l3m7n4p1
            key: id
            type: string
            visible: true
            locales:
              zh:
                name: ID
                defaultValue: ""
              en:
                name: ID
                defaultValue: ""
        q6w8e2r5t7y9u3i0:
          index: 1
          data:
            id: q6w8e2r5t7y9u3i0
            key: type
            type: string
            visible: true
            locales:
              zh:
                name: 类型
                defaultValue: link
              en:
                name: Type
                defaultValue: link
        a7s4d6f8g1h3j5k2:
          index: 2
          data:
            id: a7s4d6f8g1h3j5k2
            key: text
            type: string
            visible: true
            locales:
              zh:
                name: 按钮文本
                defaultValue: ""
              en:
                name: Button Text
                defaultValue: ""
        z9x8c7v6b5n4m3l1:
          index: 3
          data:
            id: z9x8c7v6b5n4m3l1
            key: url
            type: string
            visible: true
            locales:
              zh:
                name: 链接地址
                defaultValue: ""
              en:
                name: URL
                defaultValue: ""
        p0o9i8u7y6t5r4e3:
          index: 4
          data:
            id: p0o9i8u7y6t5r4e3
            key: variant
            type: string
            visible: true
            locales:
              zh:
                name: 变体
                defaultValue: contained
              en:
                name: Variant
                defaultValue: contained
        w1e2r3t4y5u6i7o8:
          index: 5
          data:
            id: w1e2r3t4y5u6i7o8
            key: size
            type: string
            visible: true
            locales:
              zh:
                name: 尺寸
                defaultValue: medium
              en:
                name: Size
                defaultValue: medium
        s9d8f7g6h5j4k3l2:
          index: 6
          data:
            id: s9d8f7g6h5j4k3l2
            key: target
            type: string
            visible: true
            locales:
              zh:
                name: 打开方式
                defaultValue: _self
              en:
                name: Target
                defaultValue: _self
        n6m7b8v9c0x1z2a3:
          index: 7
          data:
            id: n6m7b8v9c0x1z2a3
            key: needLogin
            type: boolean
            visible: true
            locales:
              zh:
                name: 需要登录
                defaultValue: false
              en:
                name: Need Login
                defaultValue: false
        x2c3v4b5n6m7j8k9:
          index: 8
          data:
            id: x2c3v4b5n6m7j8k9
            key: imageUrl
            type: url
            visible: true
            locales:
              zh:
                name: 图片地址
                defaultValue: ""
              en:
                name: Image URL
                defaultValue: ""
        d1f2g3h4j5k6l7z8:
          index: 9
          data:
            id: d1f2g3h4j5k6l7z8
            key: imageUrlDark
            type: url
            visible: true
            locales:
              zh:
                name: 暗黑模式图片地址
                defaultValue: ""
              en:
                name: Dark Mode Image URL
                defaultValue: ""
  v5utpm7bu9yvdpnq:
    index: 1
    data:
      id: v5utpm7bu9yvdpnq
      key: align
      type: string
      visible: false
      locales:
        zh:
          name: 对齐方式
          defaultValue: center
        en:
          name: Alignment
          defaultValue: center
  h4g7j2k8l9m5n3p6:
    index: 2
    data:
      id: h4g7j2k8l9m5n3p6
      key: direction
      type: string
      visible: false
      locales:
        zh:
          name: 排列方向
          defaultValue: row
        en:
          name: Direction
          defaultValue: row
  r8t5y6u7i1o2p3a4:
    index: 3
    data:
      id: r8t5y6u7i1o2p3a4
      key: gap
      type: number
      visible: false
      locales:
        zh:
          name: 间距
          defaultValue: 16
        en:
          name: Gap
          defaultValue: 16
  jjq9864c7hqkr0uj:
    index: 4
    data:
      id: jjq9864c7hqkr0uj
      key: flexWrap
      locales:
        zh:
          defaultValue: wrap
      visible: false
  v9979xeclpsbvn0n:
    index: 5
    data:
      id: v9979xeclpsbvn0n
      key: alignMobile
      visible: true
      locales:
        zh:
          name: 移动端对齐方式
          defaultValue: center
        en:
          name: Mobile Alignment
          defaultValue: center
llmConfig:
  properties:
    b8x4m3n9kp7qtw5r:
      key: buttons
      isNeedGenerate: true
      describe: "按钮列表数组，每个按钮遵循 LinkElementProps 类型定义：{ id?: string; type: 'link';
        text: string; url: string; variant?: 'text' | 'outlined' | 'contained' |
        'icon' | 'image'; size?: 'small' | 'medium' | 'large'; target?: '_blank'
        | '_self'; needLogin?: boolean; startIcon?: string; endIcon?: string;
        color?: string; borderColor?: string; imageUrl?: string; imageUrlDark?:
        string; imageWidth?: number; imageHeight?: number; imageHoverAnimation?:
        boolean; }"
      displayName: 按钮列表
      subProperties:
        k9j2h5f8l3m7n4p1:
          key: id
          isNeedGenerate: false
          describe: ""
          displayName: ID
        q6w8e2r5t7y9u3i0:
          key: type
          isNeedGenerate: false
          describe: ""
          displayName: 类型
        a7s4d6f8g1h3j5k2:
          key: text
          isNeedGenerate: true
          describe: ""
          displayName: 按钮文本
        z9x8c7v6b5n4m3l1:
          key: url
          isNeedGenerate: true
          describe: ""
          displayName: 链接地址
        p0o9i8u7y6t5r4e3:
          key: variant
          isNeedGenerate: false
          describe: ""
          displayName: 变体
        w1e2r3t4y5u6i7o8:
          key: size
          isNeedGenerate: false
          describe: ""
          displayName: 尺寸
        s9d8f7g6h5j4k3l2:
          key: target
          isNeedGenerate: true
          describe: ""
          displayName: 打开方式
        n6m7b8v9c0x1z2a3:
          key: needLogin
          isNeedGenerate: false
          describe: ""
          displayName: 需要登录
        x2c3v4b5n6m7j8k9:
          key: imageUrl
          isNeedGenerate: true
          describe: ""
          displayName: 图片地址
        d1f2g3h4j5k6l7z8:
          key: imageUrlDark
          isNeedGenerate: true
          describe: ""
          displayName: 暗黑模式图片地址
    v5utpm7bu9yvdpnq:
      key: align
      isNeedGenerate: false
      describe: 按钮对齐方式：'flex-start'（左对齐）| 'center'（居中对齐）| 'flex-end'（右对齐）
      displayName: 对齐方式
    h4g7j2k8l9m5n3p6:
      key: direction
      isNeedGenerate: false
      describe: 按钮排列方向：'row'（横向排列）| 'column'（纵向排列）
      displayName: 排列方向
    r8t5y6u7i1o2p3a4:
      key: gap
      isNeedGenerate: false
      describe: 按钮之间的间距，单位为像素
      displayName: 间距
    jjq9864c7hqkr0uj:
      key: flexWrap
      isNeedGenerate: false
      describe: ""
      displayName: flexWrap
    v9979xeclpsbvn0n:
      key: alignMobile
      isNeedGenerate: false
      describe: ""
      displayName: 移动端对齐方式
version: 2
renderer:
  script: |
    const { Stack: l } = __PAGES_KIT_BUILTIN_MODULES__.require("@blocklet/pages-kit/builtin/mui/material");
    const { C: m } = await __PAGES_KIT_BUILTIN_MODULES__.require("./chunks/Button-CGigdXKK.js");
    const { u: f } = await __PAGES_KIT_BUILTIN_MODULES__.require("./chunks/hooks-BF2Vtc2Z.js");
    const { jsx: e } = __PAGES_KIT_BUILTIN_MODULES__.require("@blocklet/pages-kit/builtin/react");
    function g({ buttons: o = [], align: i = "center", alignMobile: n = "center", direction: t = "row", gap: a = 16, flexWrap: s = "wrap" }) {
        const r = f() ? n : i;
        return e(l, { direction: t, sx: { justifyContent: r, alignItems: t === "row" || t === "row-reverse" ? "center" : r, display: "flex", flexDirection: t, flexWrap: s, width: "100%", gap: `${a}px` }, children: o.map((p) => e(m, { item: p, version: "v2" })) });
    }
    export { g as default };
  type: react-component
  chunks:
    - AlignmentEditor-D3dZQ9xZ.js
    - Delete-B-23eMlI.js
    - react-beautiful-dnd.esm-DhqJ3k38.js
    - Button-CGigdXKK.js
    - ImageUploader-ZmKyfrbq.js
    - createSvgIcon-BoJcHVTP.js
    - index-xuotMAFm.js
    - index-Dq0UqkX6.js
    - _commonjsHelpers-DaMA6jEr.js
    - styled-o_l2Bbaz.js
    - emotion-styled.browser.esm-CH9caefh.js
    - extends-hS2Bh-Yp.js
    - defineProperty-j2pm37l6.js
    - hooks-BF2Vtc2Z.js
  cjsScript: |
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.default = g;
    const { Stack: l } = __PAGES_KIT_BUILTIN_MODULES__.require("@blocklet/pages-kit/builtin/mui/material");
    const { C: m } = await __PAGES_KIT_BUILTIN_MODULES__.require("./chunks/Button-CGigdXKK.js");
    const { u: f } = await __PAGES_KIT_BUILTIN_MODULES__.require("./chunks/hooks-BF2Vtc2Z.js");
    const { jsx: e } = __PAGES_KIT_BUILTIN_MODULES__.require("@blocklet/pages-kit/builtin/react");
    function g({ buttons: o = [], align: i = "center", alignMobile: n = "center", direction: t = "row", gap: a = 16, flexWrap: s = "wrap" }) {
        const r = f() ? n : i;
        return e(l, { direction: t, sx: { justifyContent: r, alignItems: t === "row" || t === "row-reverse" ? "center" : r, display: "flex", flexDirection: t, flexWrap: s, width: "100%", gap: `${a}px` }, children: o.map((p) => e(m, { item: p, version: "v2" })) });
    }
  editComponent: |
    var __rest = (this && this.__rest) || function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };
    const { Stack: L, TextField: V } = __PAGES_KIT_BUILTIN_MODULES__.require("@blocklet/pages-kit/builtin/mui/material");
    const q = __PAGES_KIT_BUILTIN_MODULES__.require("@blocklet/pages-kit/builtin/react").default;
    const { useState: B } = __PAGES_KIT_BUILTIN_MODULES__.require("@blocklet/pages-kit/builtin/react");
    const { A: G } = await __PAGES_KIT_BUILTIN_MODULES__.require("./chunks/AlignmentEditor-D3dZQ9xZ.js");
    const { jsxs: l, jsx: e, Fragment: I } = __PAGES_KIT_BUILTIN_MODULES__.require("@blocklet/pages-kit/builtin/react");
    const { ColorPicker: W } = __PAGES_KIT_BUILTIN_MODULES__.require("@blocklet/pages-kit/builtin/color-picker");
    const { D: K, A: J } = await __PAGES_KIT_BUILTIN_MODULES__.require("./chunks/Delete-B-23eMlI.js");
    const { D: Q, C: X, P: Y, a: Z, E: ee } = await __PAGES_KIT_BUILTIN_MODULES__.require("./chunks/react-beautiful-dnd.esm-DhqJ3k38.js");
    const { Box: r, Typography: g, Paper: ne, IconButton: S, Button: z, Dialog: te, DialogTitle: ae, DialogContent: le, Grid: d, TextField: u, FormControl: y, FormControlLabel: F, Switch: H, InputLabel: w, Select: A, MenuItem: h, Stack: ie, InputAdornment: T, DialogActions: re } = __PAGES_KIT_BUILTIN_MODULES__.require("@blocklet/pages-kit/builtin/mui/material");
    const { C: oe } = await __PAGES_KIT_BUILTIN_MODULES__.require("./chunks/Button-CGigdXKK.js");
    const { I: P } = await __PAGES_KIT_BUILTIN_MODULES__.require("./chunks/ImageUploader-ZmKyfrbq.js");
    const de = (m, o, s) => {
        const p = Array.from(m), [f] = p.splice(o, 1);
        return p.splice(s, 0, f), p;
    }, M = () => `btn-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`, k = "linear-gradient(180.12deg, #B6FFFA -82.67%, #0B71FF 99.89%)";
    function ce({ value: m = [], onChange: o, buttonVersion: s = "v2", label: p = "Buttons" }) {
        const [f, x] = B(!1), [b, v] = B(null), [t, a] = B({
            type: "link",
            text: "",
            url: "",
            color: k,
            borderColor: "rgba(255, 255, 255)",
            variant: "contained",
            size: "medium",
            target: "_self",
            startIcon: "",
            endIcon: "",
            needLogin: !1,
            // 图片按钮属性
            imageUrl: "",
            imageUrlDark: "",
            imageWidth: void 0,
            imageHeight: void 0,
            imageHoverAnimation: !0
        }), c = m.map((n) => n.id ? n : Object.assign(Object.assign({}, n), { id: M() })), O = (n) => {
            if (!n.destination || n.destination.index === n.source.index)
                return;
            const i = de(c, n.source.index, n.destination.index);
            o(i);
        }, _ = () => {
            a({
                type: "link",
                text: "",
                url: "",
                color: k,
                borderColor: "rgba(255, 255, 255)",
                variant: "contained",
                size: "medium",
                target: "_self",
                startIcon: "",
                endIcon: "",
                needLogin: !1,
                // 图片按钮属性
                imageUrl: "",
                imageUrlDark: "",
                imageWidth: void 0,
                imageHeight: void 0,
                imageHoverAnimation: !0
            }), v(null), x(!0);
        }, N = (n) => {
            v(n), a(c[n]), x(!0);
        }, R = (n) => {
            const i = [...c];
            i.splice(n, 1), o(i);
        }, j = () => {
            const n = [...c], i = Object.assign({}, t);
            i.variant === "icon" && (i.text = "", i.endIcon = ""), b !== null ? n[b] = i : n.push(Object.assign(Object.assign({}, i), { id: M() })), o(n), x(!1), v(null);
        }, E = () => {
            x(!1), v(null);
        }, U = (n) => {
            a(Object.assign(Object.assign({}, t), { color: n }));
        }, $ = (n) => {
            a(Object.assign(Object.assign({}, t), { borderColor: n }));
        };
        return /* @__PURE__ */ l(r, { children: [
                /* @__PURE__ */ e(g, { variant: "body1", sx: { fontWeight: "bold", mb: 2 }, children: p }),
                /* @__PURE__ */ e(Q, { onDragEnd: O, children: /* @__PURE__ */ e(X, { droppableId: "button-list", children: (n) => /* @__PURE__ */ l(r, Object.assign(Object.assign({}, n.droppableProps), { ref: n.innerRef, sx: { width: "100%" }, children: [
                                c.map((i, C) => /* @__PURE__ */ e(Y, { draggableId: i.id, index: C, children: (D) => /* @__PURE__ */ e(ne, Object.assign(Object.assign({ ref: D.innerRef }, D.draggableProps), { elevation: 1, sx: { mb: 2, p: 2 }, children: /* @__PURE__ */ l(r, {
                                            sx: {
                                                display: "flex",
                                                flexDirection: "column",
                                                gap: 2
                                            },
                                            children: [
                                                /* @__PURE__ */ l(r, {
                                                    sx: {
                                                        display: "flex",
                                                        justifyContent: "space-between",
                                                        alignItems: "center"
                                                    },
                                                    children: [
                                                        /* @__PURE__ */ l(r, Object.assign(Object.assign({}, D.dragHandleProps), { sx: {
                                                                display: "flex",
                                                                alignItems: "center",
                                                                cursor: "grab"
                                                            }, children: [
                                                                /* @__PURE__ */ e(Z, { color: "action", sx: { mr: 1 } }),
                                                                /* @__PURE__ */ l(g, { variant: "body2", color: "text.secondary", children: [
                                                                        "Button ",
                                                                        C + 1,
                                                                        " ",
                                                                        i.variant === "image" ? "(Image)" : ""
                                                                    ] })
                                                            ] })),
                                                        /* @__PURE__ */ e(S, { size: "small", onClick: () => R(C), children: /* @__PURE__ */ e(K, { fontSize: "small" }) })
                                                    ]
                                                }),
                                                /* @__PURE__ */ e(r, {
                                                    sx: {
                                                        display: "flex",
                                                        justifyContent: "center",
                                                        mb: 1
                                                    },
                                                    children: /* @__PURE__ */ e(oe, { item: i, version: s })
                                                }),
                                                /* @__PURE__ */ l(r, {
                                                    sx: {
                                                        display: "flex",
                                                        alignItems: "center",
                                                        justifyContent: "space-between"
                                                    },
                                                    children: [
                                                        /* @__PURE__ */ e(g, {
                                                            variant: "body2",
                                                            sx: {
                                                                color: "text.secondary",
                                                                overflow: "hidden",
                                                                textOverflow: "ellipsis",
                                                                maxWidth: "200px",
                                                                whiteSpace: "nowrap"
                                                            },
                                                            children: i.variant === "image" ? `Image: ${i.imageWidth || "auto"}${i.imageHeight ? " × " + i.imageHeight + "px" : ""} ${i.imageHoverAnimation ? "(animated)" : ""}${i.imageUrlDark ? " (dark mode ready)" : ""}` : i.text || i.url
                                                        }),
                                                        /* @__PURE__ */ e(S, { size: "small", onClick: () => N(C), children: /* @__PURE__ */ e(ee, { fontSize: "small" }) })
                                                    ]
                                                })
                                            ]
                                        }) })) }, i.id)),
                                n.placeholder
                            ] })) }) }),
                /* @__PURE__ */ e(r, { sx: { mt: 2, display: "flex", justifyContent: "center" }, children: /* @__PURE__ */ e(z, { variant: "outlined", startIcon: /* @__PURE__ */ e(J, {}), onClick: _, children: "Add Button" }) }),
                /* @__PURE__ */ l(te, { open: f, onClose: E, maxWidth: "sm", fullWidth: !0, children: [
                        /* @__PURE__ */ e(ae, { children: b !== null ? "Edit Button" : "Add Button" }),
                        /* @__PURE__ */ e(le, { children: /* @__PURE__ */ l(d, { container: !0, spacing: 2, sx: { mt: 1 }, children: [
                                    /* @__PURE__ */ e(d, { size: 12, children: /* @__PURE__ */ l(r, { sx: { display: "flex", alignItems: "center", gap: 2 }, children: [
                                                /* @__PURE__ */ e(u, {
                                                    fullWidth: !0,
                                                    label: "Link URL",
                                                    value: t.url || "",
                                                    onChange: (n) => a(Object.assign(Object.assign({}, t), { url: n.target.value })),
                                                    placeholder: "Enter link address"
                                                }),
                                                /* @__PURE__ */ e(r, {
                                                    sx: {
                                                        display: "flex",
                                                        alignItems: "center",
                                                        whiteSpace: "nowrap"
                                                    },
                                                    children: /* @__PURE__ */ e(y, { sx: { minWidth: 120 }, children: /* @__PURE__ */ e(r, {
                                                            sx: {
                                                                display: "flex",
                                                                alignItems: "center"
                                                            },
                                                            children: /* @__PURE__ */ e(F, {
                                                                control: /* @__PURE__ */ e(H, {
                                                                    checked: t.needLogin || !1,
                                                                    onChange: (n) => a(Object.assign(Object.assign({}, t), { needLogin: n.target.checked })),
                                                                    size: "small"
                                                                }),
                                                                label: "Login Required"
                                                            })
                                                        }) })
                                                })
                                            ] }) }),
                                    /* @__PURE__ */ e(d, { size: { xs: 12, sm: 6 }, children: /* @__PURE__ */ l(y, { fullWidth: !0, children: [
                                                /* @__PURE__ */ e(w, { children: "Variant" }),
                                                /* @__PURE__ */ l(A, {
                                                    value: t.variant || "contained",
                                                    onChange: (n) => a(Object.assign(Object.assign({}, t), { variant: n.target.value })),
                                                    label: "Variant",
                                                    children: [
                                                        /* @__PURE__ */ e(h, { value: "text", children: "Text" }),
                                                        /* @__PURE__ */ e(h, { value: "outlined", children: "Outlined" }),
                                                        /* @__PURE__ */ e(h, { value: "contained", children: "Contained" }),
                                                        /* @__PURE__ */ e(h, { value: "icon", children: "Icon" }),
                                                        /* @__PURE__ */ e(h, { value: "image", children: "Image" })
                                                    ]
                                                })
                                            ] }) }),
                                    t.variant === "image" && /* @__PURE__ */ e(I, { children: /* @__PURE__ */ l(d, { size: 12, children: [
                                                /* @__PURE__ */ e(g, { variant: "subtitle2", gutterBottom: !0, children: "Image" }),
                                                /* @__PURE__ */ l(ie, { spacing: 2, children: [
                                                        /* @__PURE__ */ e(r, { children: /* @__PURE__ */ e(P, {
                                                                label: "Image",
                                                                value: t.imageUrl || "",
                                                                onChange: (n) => {
                                                                    a(Object.assign(Object.assign({}, t), { imageUrl: n.url }));
                                                                }
                                                            }) }),
                                                        t.imageUrl && /* @__PURE__ */ e(r, { sx: { px: 2, py: 1 }, children: /* @__PURE__ */ e(r, {
                                                                component: "img",
                                                                src: t.imageUrl,
                                                                alt: "Preview",
                                                                sx: {
                                                                    maxWidth: "100%",
                                                                    maxHeight: "200px",
                                                                    objectFit: "contain",
                                                                    mb: 2,
                                                                    display: "block",
                                                                    mx: "auto"
                                                                }
                                                            }) }),
                                                        /* @__PURE__ */ e(g, { variant: "subtitle2", gutterBottom: !0, children: "Dark Mode Image (Optional)" }),
                                                        /* @__PURE__ */ e(r, { children: /* @__PURE__ */ e(P, {
                                                                label: "Dark Mode Image",
                                                                value: t.imageUrlDark || "",
                                                                onChange: (n) => {
                                                                    a(Object.assign(Object.assign({}, t), { imageUrlDark: n.url }));
                                                                }
                                                            }) }),
                                                        t.imageUrlDark && /* @__PURE__ */ e(r, { sx: { px: 2, py: 1 }, children: /* @__PURE__ */ e(r, {
                                                                component: "img",
                                                                src: t.imageUrlDark,
                                                                alt: "Dark Mode Preview",
                                                                sx: {
                                                                    maxWidth: "100%",
                                                                    maxHeight: "200px",
                                                                    objectFit: "contain",
                                                                    mb: 2,
                                                                    display: "block",
                                                                    mx: "auto"
                                                                }
                                                            }) }),
                                                        /* @__PURE__ */ e(g, { variant: "subtitle2", gutterBottom: !0, children: "Image Size" }),
                                                        /* @__PURE__ */ e(u, {
                                                            fullWidth: !0,
                                                            label: "Image Width (px)",
                                                            value: t.imageWidth,
                                                            onChange: (n) => {
                                                                const i = parseInt(n.target.value);
                                                                a(Object.assign(Object.assign({}, t), { imageWidth: isNaN(i) ? null : i }));
                                                            },
                                                            type: "number",
                                                            InputProps: {
                                                                endAdornment: /* @__PURE__ */ e(T, { position: "end", children: "px" })
                                                            }
                                                        }),
                                                        /* @__PURE__ */ e(u, {
                                                            fullWidth: !0,
                                                            label: "Image Height (px)",
                                                            value: t.imageHeight || "",
                                                            onChange: (n) => {
                                                                const i = parseInt(n.target.value);
                                                                a(Object.assign(Object.assign({}, t), { imageHeight: isNaN(i) ? void 0 : i }));
                                                            },
                                                            type: "number",
                                                            InputProps: {
                                                                endAdornment: /* @__PURE__ */ e(T, { position: "end", children: "px" })
                                                            },
                                                            sx: { mt: 1 },
                                                            helperText: "Leave empty for auto height"
                                                        }),
                                                        /* @__PURE__ */ e(F, {
                                                            control: /* @__PURE__ */ e(H, {
                                                                checked: t.imageHoverAnimation || !1,
                                                                onChange: (n) => a(Object.assign(Object.assign({}, t), { imageHoverAnimation: n.target.checked })),
                                                                size: "small"
                                                            }),
                                                            label: "Enable Hover Animation"
                                                        })
                                                    ] })
                                            ] }) }),
                                    t.variant === "contained" && /* @__PURE__ */ e(d, { size: 12, children: /* @__PURE__ */ l(r, { sx: { width: "100%" }, children: [
                                                /* @__PURE__ */ e(g, { variant: "subtitle2", gutterBottom: !0, children: "Background Color" }),
                                                /* @__PURE__ */ l(r, {
                                                    sx: {
                                                        display: "flex",
                                                        alignItems: "center",
                                                        gap: 1
                                                    },
                                                    children: [
                                                        /* @__PURE__ */ e(W, {
                                                            style: { width: 24, height: 24 },
                                                            value: t.color || k,
                                                            onChange: U
                                                        }),
                                                        /* @__PURE__ */ e(u, {
                                                            size: "small",
                                                            value: t.color,
                                                            onChange: (n) => a(Object.assign(Object.assign({}, t), { color: n.target.value })),
                                                            placeholder: "Enter background color value",
                                                            sx: { flex: 1 }
                                                        })
                                                    ]
                                                })
                                            ] }) }),
                                    t.variant === "outlined" && /* @__PURE__ */ l(I, { children: [
                                            /* @__PURE__ */ e(d, { size: 12, children: /* @__PURE__ */ l(r, { sx: { width: "100%" }, children: [
                                                        /* @__PURE__ */ e(g, { variant: "subtitle2", gutterBottom: !0, children: "Background Color" }),
                                                        /* @__PURE__ */ l(r, {
                                                            sx: {
                                                                display: "flex",
                                                                alignItems: "center",
                                                                gap: 1
                                                            },
                                                            children: [
                                                                /* @__PURE__ */ e(W, {
                                                                    style: { width: 24, height: 24 },
                                                                    value: t.color || k,
                                                                    onChange: U
                                                                }),
                                                                /* @__PURE__ */ e(u, {
                                                                    size: "small",
                                                                    value: t.color,
                                                                    onChange: (n) => a(Object.assign(Object.assign({}, t), { color: n.target.value })),
                                                                    placeholder: "Enter background color value",
                                                                    sx: { flex: 1 }
                                                                })
                                                            ]
                                                        })
                                                    ] }) }),
                                            /* @__PURE__ */ e(d, { size: 12, children: /* @__PURE__ */ l(r, { sx: { width: "100%" }, children: [
                                                        /* @__PURE__ */ e(g, { variant: "subtitle2", gutterBottom: !0, children: "Border Color" }),
                                                        /* @__PURE__ */ l(r, {
                                                            sx: {
                                                                display: "flex",
                                                                alignItems: "center",
                                                                gap: 1
                                                            },
                                                            children: [
                                                                /* @__PURE__ */ e(W, {
                                                                    style: { width: 24, height: 24 },
                                                                    value: t.borderColor || "rgba(255, 255, 255)",
                                                                    onChange: $
                                                                }),
                                                                /* @__PURE__ */ e(u, {
                                                                    size: "small",
                                                                    value: t.borderColor,
                                                                    onChange: (n) => a(Object.assign(Object.assign({}, t), { borderColor: n.target.value })),
                                                                    placeholder: "Enter border color value",
                                                                    sx: { flex: 1 }
                                                                })
                                                            ]
                                                        })
                                                    ] }) })
                                        ] }),
                                    /* @__PURE__ */ e(d, { size: { xs: 12, sm: 6 }, children: /* @__PURE__ */ l(y, { fullWidth: !0, children: [
                                                /* @__PURE__ */ e(w, { children: "Target" }),
                                                /* @__PURE__ */ l(A, {
                                                    value: t.target || "_self",
                                                    onChange: (n) => a(Object.assign(Object.assign({}, t), { target: n.target.value })),
                                                    label: "Target",
                                                    children: [
                                                        /* @__PURE__ */ e(h, { value: "_blank", children: "New Window" }),
                                                        /* @__PURE__ */ e(h, { value: "_self", children: "Current Window" })
                                                    ]
                                                })
                                            ] }) }),
                                    t.variant !== "image" && /* @__PURE__ */ l(I, { children: [
                                            /* @__PURE__ */ e(d, { size: { xs: 12, sm: 6 }, children: /* @__PURE__ */ l(y, { fullWidth: !0, children: [
                                                        /* @__PURE__ */ e(w, { children: "Size" }),
                                                        /* @__PURE__ */ l(A, {
                                                            value: t.size || "medium",
                                                            onChange: (n) => a(Object.assign(Object.assign({}, t), { size: n.target.value })),
                                                            label: "Size",
                                                            children: [
                                                                /* @__PURE__ */ e(h, { value: "small", children: "Small" }),
                                                                /* @__PURE__ */ e(h, { value: "medium", children: "Medium" }),
                                                                /* @__PURE__ */ e(h, { value: "large", children: "Large" })
                                                            ]
                                                        })
                                                    ] }) }),
                                            t.variant !== "icon" && /* @__PURE__ */ l(I, { children: [
                                                    /* @__PURE__ */ e(d, { size: 12, children: /* @__PURE__ */ e(u, {
                                                            fullWidth: !0,
                                                            label: "Button Text",
                                                            value: t.text || "",
                                                            onChange: (n) => a(Object.assign(Object.assign({}, t), { text: n.target.value })),
                                                            placeholder: "Enter button display text"
                                                        }) }),
                                                    /* @__PURE__ */ e(d, { size: { xs: 12, sm: 6 }, children: /* @__PURE__ */ e(u, {
                                                            fullWidth: !0,
                                                            label: "End Icon",
                                                            value: t.endIcon || "",
                                                            onChange: (n) => a(Object.assign(Object.assign({}, t), { endIcon: n.target.value })),
                                                            placeholder: "Enter icon name"
                                                        }) })
                                                ] }),
                                            /* @__PURE__ */ e(d, {
                                                size: {
                                                    xs: 12,
                                                    sm: t.variant === "icon" ? 12 : 6
                                                },
                                                children: /* @__PURE__ */ e(u, {
                                                    fullWidth: !0,
                                                    label: t.variant === "icon" ? "Image URL" : "Start Icon",
                                                    value: t.startIcon || "",
                                                    onChange: (n) => a(Object.assign(Object.assign({}, t), { startIcon: n.target.value })),
                                                    placeholder: t.variant === "icon" ? "Enter image URL" : "Enter icon name"
                                                })
                                            })
                                        ] })
                                ] }) }),
                        /* @__PURE__ */ l(re, { children: [
                                /* @__PURE__ */ e(z, { onClick: E, children: "Cancel" }),
                                /* @__PURE__ */ e(z, { onClick: j, variant: "contained", color: "primary", children: "Save" })
                            ] })
                    ] })
            ] });
    }
    const Ce = (_a) => {
        var { onChange: m } = _a, o = __rest(_a, ["onChange"]);
        const s = q.useCallback((a) => {
            if (!m)
                return;
            const c = Object.assign(Object.assign({}, o), a);
            m(c);
        }, [m, o]), p = (a) => {
            s({ buttons: a });
        }, f = (a) => {
            s({ align: a });
        }, x = (a) => {
            s({ alignMobile: a });
        }, b = (a) => {
            s({ direction: a });
        }, v = (a) => {
            s({ flexWrap: a });
        }, t = (a) => {
            const c = parseInt(a.target.value);
            !isNaN(c) && c >= 0 && s({ gap: c });
        };
        return l(L, { spacing: 3, children: [e(ce, { value: o.buttons || [], onChange: p, buttonVersion: "v2", label: "Action Buttons" }), l(L, { spacing: 2, children: [e(G, { value: o.align, onChange: f, valueMobile: o.alignMobile, onChangeMobile: x, label: "对齐方式", showFlexOptions: !0, flexDirection: o.direction, onFlexDirectionChange: b, flexWrap: o.flexWrap, onFlexWrapChange: v }), e(V, { fullWidth: !0, label: "元素间距(px)", type: "number", value: o.gap || 16, onChange: t, inputProps: { min: 0 } })] })] });
    };
    export { Ce as EditComponent };
